/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.AdminOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CommunityFridgeWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ashwin
 */
public class ManageRequestsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRequestsJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Enterprise enterprise;

    public ManageRequestsJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, Organization organization, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.enterprise = enterprise;
        populateOrganization();
    }
    private void populateOrganization() {
        
        orgComboBox.removeAllItems();
        employeeComboBox.removeAllItems();
        
       for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                orgComboBox.addItem(organization.toString());
        }
       
    }
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        String o = orgComboBox.getSelectedItem().toString();
         for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org.getName().equals(o)){
                for(WorkRequest request : org.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
           
            row[0] = request.getSender().getReceiver().getName();
            row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[2] = request;
            row[3] = request.getStatus();
            
            model.addRow(row);
            }}  
        }
            
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        orgComboBox = new javax.swing.JComboBox();
        employeeComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        assign = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        back = new javax.swing.JButton();
        Search = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("PT Serif Caption", 1, 18)); // NOI18N
        jLabel1.setText("Organization:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 190, -1));

        orgComboBox.setFont(new java.awt.Font("PT Serif Caption", 1, 14)); // NOI18N
        orgComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        orgComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgComboBoxActionPerformed(evt);
            }
        });
        orgComboBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                orgComboBoxPropertyChange(evt);
            }
        });
        add(orgComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 190, 30));

        employeeComboBox.setFont(new java.awt.Font("PT Serif Caption", 1, 14)); // NOI18N
        employeeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(employeeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, 190, 30));

        jLabel2.setFont(new java.awt.Font("PT Serif Caption", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Assign task to:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 240, -1));

        assign.setBackground(new java.awt.Color(255, 255, 255));
        assign.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        assign.setText("Assign");
        assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignActionPerformed(evt);
            }
        });
        add(assign, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 340, 93, 42));

        workRequestJTable.setFont(new java.awt.Font("PT Serif Caption", 1, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sender", "Receiver", "Query", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 170, 653, 96));

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("PT Serif Caption", 1, 14)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        Search.setBackground(new java.awt.Color(255, 255, 255));
        Search.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void assignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignActionPerformed
        // TODO add your handling code here:
        int selectedRow = workRequestJTable.getSelectedRow();
        if(selectedRow >= 0){
            WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(selectedRow, 2);
            
            if(!request.getStatus().equals("Assigned") && !request.getStatus().equals("Reply sent")){
                for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
                    for(UserAccount user: org.getUserAccountDirectory().getUserAccountList()){
                        if(employeeComboBox.getSelectedItem().equals(user.getEmployee().getName())){    
                            
                            int x = user.getWorkQueue().getWorkRequestList().size();
                            if(x>0){
                            WorkRequest r = user.getWorkQueue().getWorkRequestList().get(x-1);
                            String st = r.getStatus();
                                if(st.equals("Assigned")){
                                    JOptionPane.showMessageDialog(null,"Request already sent. Process it first","Error",JOptionPane.ERROR_MESSAGE);
                                        return;
                                    
                                }
                                else{
                                request.setReceiver(user);
                               
                                 request.setStatus("Assigned");
                                 JOptionPane.showMessageDialog(null,"Request has been assigned","Success",JOptionPane.INFORMATION_MESSAGE);
                                user.getWorkQueue().getWorkRequestList().add(request);

                                }}else{
                            request.setReceiver(user);
                           
                             request.setStatus("Assigned");
                             JOptionPane.showMessageDialog(null,"Request has been assigned","Success",JOptionPane.INFORMATION_MESSAGE);
                            user.getWorkQueue().getWorkRequestList().add(request);

                                }
                        }
                    }
                }
                populateTable();
            }else{
                if(request.getStatus().equals("Assigned")){
                     JOptionPane.showMessageDialog(null,"Request has already been assigned","Alert",JOptionPane.INFORMATION_MESSAGE);
                }else if(request.getStatus().equals("Reply sent")){
                     JOptionPane.showMessageDialog(null,"Request has already been sent!","Alert",JOptionPane.INFORMATION_MESSAGE);
                }
               
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please Select a row","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_assignActionPerformed

    private void orgComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orgComboBoxActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backActionPerformed

    private void orgComboBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_orgComboBoxPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_orgComboBoxPropertyChange

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        employeeComboBox.removeAllItems();
        String organization = orgComboBox.getSelectedItem().toString();
        for(Organization org: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(org.getName().equals(organization)){
                
                for(Employee emp:org.getEmployeeDirectory().getEmployeeList()){
                    employeeComboBox.addItem(emp.getName());
                }               
                }
         populateTable();                
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Search;
    private javax.swing.JButton assign;
    private javax.swing.JButton back;
    private javax.swing.JComboBox<String> employeeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox orgComboBox;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables

}
