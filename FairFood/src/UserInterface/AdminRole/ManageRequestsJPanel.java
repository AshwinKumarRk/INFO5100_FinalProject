/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organisation.Organisation;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author truptiraut
 */
public class ManageRequestsJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private Enterprise enterprise;


    /**
     * Creates new form ManagerRequestsJPanel
     */
     public ManageRequestsJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, Organisation organisation, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.system = system;
        this.enterprise = enterprise;
     //   workRequestJTable.getTableHeader().setDefaultRenderer(new tableHeaderColors());
        //this.adminOrganization = (AdminOrganization)organization;
       
        populateOrg();
    }
     
      private void populateOrg() {
        
        OrgComboBox.removeAllItems();
        
        empComboBox.removeAllItems();
        
       for(Organisation organisation : enterprise.getOrganisationDirectory().getOrganisationList()){
                OrgComboBox.addItem(organisation.toString());
        }
       
    }
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)Orgtable.getModel();
        
        model.setRowCount(0);
        String o = OrgComboBox.getSelectedItem().toString();
         for(Organisation org: enterprise.getOrganisationDirectory().getOrganisationList()){
            if(org.getName().equals(o)){
                for(WorkRequest request : org.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
           
            row[0] = request.getSender().getReceiver().getName();
            row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[2] = request;
            row[3] = request.getStatus();
            
            model.addRow(row);
            }}  
        }
        
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        OrgComboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        OrgTable = new javax.swing.JScrollPane();
        Orgtable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        empComboBox = new javax.swing.JComboBox<>();
        Assigning = new javax.swing.JButton();
        Back = new javax.swing.JButton();

        jLabel1.setText("Organisation");

        OrgComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Orgtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        OrgTable.setViewportView(Orgtable);

        jLabel2.setText("jLabel2");

        empComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Assigning.setText("Assign");
        Assigning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssigningActionPerformed(evt);
            }
        });

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(251, 251, 251)
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(OrgComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(OrgTable, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel2)
                        .addGap(58, 58, 58)
                        .addComponent(empComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(Assigning))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(Back)))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(OrgComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(46, 46, 46)
                .addComponent(OrgTable, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(empComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Assigning)))
                .addGap(42, 42, 42)
                .addComponent(Back)
                .addContainerGap(43, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void AssigningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssigningActionPerformed
        // TODO add your handling code here:
        int selectedRow = Orgtable.getSelectedRow();
        if(selectedRow >= 0){
            WorkRequest request = (WorkRequest) Orgtable.getValueAt(selectedRow, 2);
            //NutritionistWorkRequest request = (NutritionistWorkRequest) workRequestJTable.getValueAt(selectedRow, 2);
        //request.setSender(userAccount);
            if(!request.getStatus().equals("Assigned") && !request.getStatus().equals("Result Posted")){
                for(Organisation org: enterprise.getOrganisationDirectory().getOrganisationList()){
                    for(UserAccount user: org.getUserAccountDirectory().getUserAccountList()){
                        if(empComboBox.getSelectedItem().equals(user.getEmployee().getName())){    
                            
                            int x = user.getWorkQueue().getWorkRequestList().size();
                            if(x>0){
                            WorkRequest r = user.getWorkQueue().getWorkRequestList().get(x-1);
                            String st = r.getStatus();
                                if(st.equals("Assigned")){
                                    JOptionPane.showMessageDialog(null,"Asigne already has a request in open status!","Error",JOptionPane.ERROR_MESSAGE);
                                        return;
                                    
                                }
                                else{
                                request.setReceiver(user);
                                 request.setStatus("Assigned");
                                 JOptionPane.showMessageDialog(null,"Request has Assigned Successfully!","Success",JOptionPane.INFORMATION_MESSAGE);
                                user.getWorkQueue().getWorkRequestList().add(request);

                                }}else{
                            request.setReceiver(user);
                             request.setStatus("Assigned");
                             JOptionPane.showMessageDialog(null,"Request has Assigned Successfully!","Success",JOptionPane.INFORMATION_MESSAGE);
                            user.getWorkQueue().getWorkRequestList().add(request);

                                }
                        }
                    }
                }
                populateTable();
            }else{
                if(request.getStatus().equals("Assigned")){
                     JOptionPane.showMessageDialog(null,"Request has assigned Already!","Alert",JOptionPane.INFORMATION_MESSAGE);
                }else if(request.getStatus().equals("Result Posted")){
                     JOptionPane.showMessageDialog(null,"Request has Posted Already!","Alert",JOptionPane.INFORMATION_MESSAGE);
                }
               
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please Select a row","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_AssigningActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
          userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          empComboBox.removeAllItems();
        String organization = OrgComboBox.getSelectedItem().toString();
        for(Organisation org: enterprise.getOrganisationDirectory().getOrganisationList()){
            if(org.getName().equals(organization)){
                
                for(Employee emp:org.getEmployeeDirectory().getEmployeeList()){
                    empComboBox.addItem(emp.getName());
                }
               
                    
                }
            
         populateTable();
                
            }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Assigning;
    private javax.swing.JButton Back;
    private javax.swing.JComboBox<String> OrgComboBox;
    private javax.swing.JScrollPane OrgTable;
    private javax.swing.JTable Orgtable;
    private javax.swing.JComboBox<String> empComboBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
