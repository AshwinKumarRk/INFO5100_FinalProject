/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AdminRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Organisation.Organisation;
import Business.Organisation.OrganisationDirectory;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author truptiraut
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private Organisation org;
    private OrganisationDirectory organisationDirectory;
    private EcoSystem system;
   // private boolean emailValid;
    private boolean userNameValid;
     private boolean  passwordValid;

    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer,OrganisationDirectory organisationDirectory,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organisationDirectory = organisationDirectory;
        this.system = system;
        clearFields();
        //organizationJTable.getTableHeader().setDefaultRenderer(new tableHeaderColors());
        populateOrgComboBox();
        populateOrgEmpComboBox();

    }
    /*
      public void populateOrganizationEmployeeComboBox() {
        organizationEmpJComboBox.removeAllItems();

        for (Organization organization : organizationDirectory.getOrganizationList()) {
            organizationEmpJComboBox.addItem(organization);
        }
    }*/
    
     public void populateOrgComboBox(){
        OrgComboBox.removeAllItems();
        
        for (Organisation organisation : organisationDirectory.getOrganisationList()){
            String o=organisation.toString();
            OrgComboBox.addItem(o);
        }
    }
     
     public void populateOrgEmpComboBox(){
        OrgEmpComboBox.removeAllItems();
        
        for (Organisation organisation : organisationDirectory.getOrganisationList()){
             String o=organisation.toString();
            OrgEmpComboBox.addItem(o);
        }
    }
     
      private void populateRoleComboBox(Organisation organisation){
        RoleComboBox.removeAllItems();
        for (Role role : organisation.getSupportedRole()){

            String r = role.toString();
            RoleComboBox.addItem(r);
        }
    }

       private void populateTable(Organisation organisation){
        DefaultTableModel model = (DefaultTableModel) OrgTable.getModel();
        
        model.setRowCount(0);
        
        for (UserAccount acc : organisation.getUserAccountDirectory().getUserAccountList()){
            Employee employee = acc.getEmployee();
            Object[] row = new Object[3];
            row[0] = employee.getId();
            row[1] = employee;
            row[2] = acc;
            model.addRow(row);
        
        }
    }
    
     public void clearFields(){
        
        passwordLbl.setVisible(false);
        usernameLbl.setVisible(false);
        
    }
     
      private boolean usernamePatternCorrect(String val){
        Pattern p=Pattern.compile("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Matcher m=p.matcher(val);
        boolean b=m.matches();
        return b;
    }
      
       private boolean passwordPatternCorrect(String val1){
        Pattern p1;
        p1 = Pattern.compile("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$");
        Matcher m1=p1.matcher(String.valueOf(val1));
        boolean b1=m1.matches();
        return b1;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        OrgComboBox = new javax.swing.JComboBox<>();
        RoleComboBox = new javax.swing.JComboBox<>();
        NameField = new javax.swing.JTextField();
        UserNameField = new javax.swing.JTextField();
        PasswordField = new javax.swing.JTextField();
        CreateBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        OrgEmpComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrgTable = new javax.swing.JTable();
        usernameLbl = new javax.swing.JLabel();
        passwordLbl = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Back.setText("jButton1");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        jLabel1.setText("Add Employee");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));

        jLabel2.setText("View Employee");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 360, -1, -1));

        jLabel3.setText("Organisation");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        jLabel4.setText("Role");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 40, -1));

        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, -1, -1));

        jLabel6.setText("UserName");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, -1, -1));

        jLabel7.setText("Password");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, -1, -1));

        OrgComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(OrgComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, -1, -1));

        RoleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(RoleComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, -1, -1));

        NameField.setText("jTextField1");
        add(NameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, -1, -1));

        UserNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                UserNameFieldKeyReleased(evt);
            }
        });
        add(UserNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 70, -1));

        PasswordField.setText("jTextField3");
        PasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PasswordFieldKeyReleased(evt);
            }
        });
        add(PasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, -1, -1));

        CreateBtn.setText("Create");
        CreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBtnActionPerformed(evt);
            }
        });
        add(CreateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 160, -1, -1));

        jLabel8.setText("Organisation");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, -1, -1));

        OrgEmpComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        OrgEmpComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrgEmpComboBoxActionPerformed(evt);
            }
        });
        add(OrgEmpComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 410, -1, -1));

        OrgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "NAME", "USERNAME"
            }
        ));
        jScrollPane1.setViewportView(OrgTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 380, 90));

        usernameLbl.setText("username@gmail");
        add(usernameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, -1, -1));

        passwordLbl.setText("password@1");
        add(passwordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, -1, -1));

        Delete.setText("delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 510, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
          userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackActionPerformed

    private void CreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBtnActionPerformed
        // TODO add your handling code here:
        String userName = UserNameField.getText();
        String password = PasswordField.getText();
        //String name = txtName.getText();
        
        Organisation organisation = (Organisation) OrgEmpComboBox.getSelectedItem();
        
        Employee employee = new Employee();
        employee.setName(NameField.getText());
        
        Role role = (Role) RoleComboBox.getSelectedItem();
        

        if(!UserNameField.getText().isEmpty() && !PasswordField.getText().isEmpty() && !NameField.getText().isEmpty()){
            if(organisation.getEmployeeDirectory().checkIfUsernameIsUnique(userName)){
                if(usernamePatternCorrect(userName)){
                    if(organisation.getUserAccountDirectory().checkIfUsernameIsUnique(userName)){
                        organisation.getEmployeeDirectory().createEmployee(NameField.getText());
                         organisation.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                        // organization.getUserAccountDirectory().createUserAccount(userName, password, role);
                         JOptionPane.showMessageDialog(null,"Employee created successfully");
                         populateTable(organisation);
                         UserNameField.setText("");
                         PasswordField.setText("");
                         NameField.setText("");
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Username already exists", "Warning", JOptionPane.WARNING_MESSAGE);
                        NameField.setText("");
                        return;
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Email format emp@domain.com", "Warning", JOptionPane.WARNING_MESSAGE);
                    NameField.setText("");
                    return;
                }
            }
            else{
                    JOptionPane.showMessageDialog(null, "Employee already exists", "Warning", JOptionPane.WARNING_MESSAGE);
                    NameField.setText("");
                    return;
            } 
        }
        else{
                JOptionPane.showMessageDialog(null, "All fields must be entered", "Warning", JOptionPane.WARNING_MESSAGE);
                NameField.setText("");
        if(UserNameField.getText().isEmpty() && PasswordField.getText().isEmpty() && NameField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "All fields must be entered", "Warning", JOptionPane.WARNING_MESSAGE);

                return;
        }
            if(userNameValid  && passwordValid){
                organisation.getEmployeeDirectory().createEmployee(UserNameField.getText());
                 organisation.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
                 JOptionPane.showMessageDialog(null,"Employee created successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                 populateTable(organisation);
                 UserNameField.setText("");
                 PasswordField.setText("");
                 NameField.setText("");
                 clearFields();
            }
        }   
                                         
    }//GEN-LAST:event_CreateBtnActionPerformed

    private void OrgEmpComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrgEmpComboBoxActionPerformed
        // TODO add your handling code here:
         Organisation organisation = (Organisation) OrgEmpComboBox.getSelectedItem();
        if (organisation != null){
            //populateEmployeeComboBox(organization);
            populateRoleComboBox(organisation);
        }
    }//GEN-LAST:event_OrgEmpComboBoxActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
         int row = OrgTable.getSelectedRow();

        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Employee e1 = (Employee)OrgTable.getValueAt(row, 1);
        UserAccount ua = (UserAccount)OrgTable.getValueAt(row, 2);
        org.getEmployeeDirectory().removeEmployee(e1);
        org.getUserAccountDirectory().removeUserAccount(ua);
        populateTable(org);
    }//GEN-LAST:event_DeleteActionPerformed

    private void UserNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UserNameFieldKeyReleased
        // TODO add your handling code here:
        
         Organisation organisation = (Organisation) OrgEmpComboBox.getSelectedItem();
        if(!usernamePatternCorrect(UserNameField.getText()) && !(UserNameField.getText().isEmpty())){
           
            usernameLbl.setVisible(true);
            userNameValid = false;
        }else if(!organisation.getUserAccountDirectory().checkIfUsernameIsUnique(UserNameField.getText())){
           
            usernameLbl.setVisible(false);
            userNameValid = false;

        }else if(UserNameField.getText().isEmpty()){
            
            usernameLbl.setVisible(false);
            userNameValid = false;
        }else {
           
           usernameLbl.setVisible(false);
            userNameValid = true;
        }
    }//GEN-LAST:event_UserNameFieldKeyReleased

    private void PasswordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordFieldKeyReleased
        // TODO add your handling code here:
          if(!passwordPatternCorrect(PasswordField.getText()) && !(PasswordField.getText().isEmpty())){
           
            passwordLbl.setVisible(true);
        }else if(PasswordField.getText().isEmpty()){
            passwordLbl.setVisible(false);
           
        }else{
            passwordLbl.setVisible(false);
          
        }
    }//GEN-LAST:event_PasswordFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton CreateBtn;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField NameField;
    private javax.swing.JComboBox<String> OrgComboBox;
    private javax.swing.JComboBox<String> OrgEmpComboBox;
    private javax.swing.JTable OrgTable;
    private javax.swing.JTextField PasswordField;
    private javax.swing.JComboBox<String> RoleComboBox;
    private javax.swing.JTextField UserNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JLabel usernameLbl;
    // End of variables declaration//GEN-END:variables
}
