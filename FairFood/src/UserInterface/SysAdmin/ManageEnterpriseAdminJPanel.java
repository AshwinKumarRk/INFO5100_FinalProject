/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SysAdmin;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author truptiraut
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEnterpriseAdminJPanel
     */
       
  private JPanel userProcessContainer;
    private EcoSystem system;
    private boolean emailValid;
  //  private boolean nameValid;
    private int entAvail=0;
    
     public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
         clearFields();
        populateTable();
        populateNetworkComboBox();
    }
     
      private void clearFields() {
       usernamelabel.setVisible(false);
       passlabel.setVisible(false);
             
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[5];
                    row[0] = userAccount.getEmployee().getId();
                    row[1] = userAccount.getEmployee().getName();
                    row[2] = enterprise.getName();
                    row[3] = network.getName();
                    row[4] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }
    
    private boolean usernamePatternCorrect(String val){
        Pattern p=Pattern.compile("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Matcher m=p.matcher(val);
        boolean b=m.matches();
        return b;
    }
    
    private boolean passwordPatternCorrect(String val1){
        Pattern p1;
        p1 = Pattern.compile("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$");
        Matcher m1=p1.matcher(String.valueOf(val1));
        boolean b1=m1.matches();
        return b1;
    }
    
    private void populateNetworkComboBox(){
        netwJComboBox.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            netwJComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        entJComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            entJComboBox.addItem(enterprise);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordJPasswordField = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        nameJTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        submitJButton = new javax.swing.JButton();
        netwJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        entJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        usernamelabel = new javax.swing.JLabel();
        passlabel = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passwordJPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordJPasswordFieldActionPerformed(evt);
            }
        });
        passwordJPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordJPasswordFieldKeyReleased(evt);
            }
        });
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 345, 134, -1));

        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 394, -1, -1));

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 58, 523, 95));

        nameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameJTextFieldKeyReleased(evt);
            }
        });
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 389, 136, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 421, -1, -1));

        jLabel1.setText("Network");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 202, -1, -1));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 430, -1, -1));

        netwJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        netwJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                netwJComboBoxActionPerformed(evt);
            }
        });
        add(netwJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 198, 136, -1));

        jLabel3.setText("Enterprise");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 260, -1, -1));

        entJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(entJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 256, 136, -1));

        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 306, -1, -1));

        usernameJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameJTextFieldActionPerformed(evt);
            }
        });
        usernameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameJTextFieldKeyReleased(evt);
            }
        });
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(203, 301, 136, -1));

        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 350, -1, -1));

        usernamelabel.setText("name@gmail");
        add(usernamelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        passlabel.setText("name@!22");
        add(passlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminmjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminmjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

Enterprise enterprise = (Enterprise) entJComboBox.getSelectedItem();
        if(enterprise.getEmployeeDirectory().getEmployeeList().size() != 0){
                entAvail=1;
        }
        if(usernameJTextField.getText().isEmpty() || passwordJPasswordField.getText().isEmpty() || nameJTextField.getText().isEmpty()){
             JOptionPane.showMessageDialog(null,"Field(s) cannot be Empty!","Error",JOptionPane.ERROR_MESSAGE);
             return;
        }else if(emailValid && entAvail!=1){

            String username = usernameJTextField.getText();
            String password = String.valueOf(passwordJPasswordField.getPassword());
            String name = nameJTextField.getText();

            Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);

            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password,employee, new AdminRole());
            populateTable();
            netwJComboBox.setSelectedIndex(0);
            entJComboBox.setSelectedIndex(0);
            usernameJTextField.setText("");
            passwordJPasswordField.setText("");
            nameJTextField.setText("");
            clearFields();
        
        }else {
            if(entAvail == 1){
                JOptionPane.showMessageDialog(null, "Enterprise admin is already added !","Alert",JOptionPane.INFORMATION_MESSAGE);
                clearFields();
                usernameJTextField.setText("");
                passwordJPasswordField.setText("");
                nameJTextField.setText("");
            }else{
                JOptionPane.showMessageDialog(null, "Please enter all the required fields correctly!","Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        
                  
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void netwJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_netwJComboBoxActionPerformed

        Network network = (Network) netwJComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_netwJComboBoxActionPerformed

    private void usernameJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameJTextFieldActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_usernameJTextFieldActionPerformed

    private void passwordJPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordJPasswordFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_passwordJPasswordFieldActionPerformed

    private void usernameJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameJTextFieldKeyReleased
        // TODO add your handling code here:
         if (!usernamePatternCorrect(usernameJTextField.getText()) && !(usernameJTextField.getText().isEmpty())){
              usernamelabel.setVisible(true);
             
              emailValid =false;
        }else if(usernameJTextField.getText().isEmpty()){
            usernamelabel.setVisible(false);
            emailValid =false;
            
        }else{
         usernamelabel.setVisible(false);
        
         emailValid =true;
        }
    }//GEN-LAST:event_usernameJTextFieldKeyReleased

    private void passwordJPasswordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordJPasswordFieldKeyReleased
        // TODO add your handling code here:
         if(!passwordPatternCorrect(passwordJPasswordField.getText()) && !(passwordJPasswordField.getText().isEmpty())){
            passlabel.setVisible(false);
           
        }else if(passwordJPasswordField.getText().isEmpty()){
            passlabel.setVisible(false);
             
        }else{
            passlabel.setVisible(false);
           
        }
    }//GEN-LAST:event_passwordJPasswordFieldKeyReleased

    private void nameJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameJTextFieldKeyReleased
        // TODO add your handling code here:
//        if(!cityPatternCorrect(nameJTextField.getText()) && !(nameJTextField.getText().isEmpty())){
//            citySuccessLbl.setVisible(false);
//            cityLbl.setVisible(true);
//            nameValid = false;
//        }else if(nameJTextField.getText().isEmpty()){
//            citySuccessLbl.setVisible(false);
//            cityLbl.setVisible(false);
//            nameValid = false;
//        }else{
//            nameValid = true;
//            cityLbl.setVisible(false);
//            citySuccessLbl.setVisible(true);
//        }
    }//GEN-LAST:event_nameJTextFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox entJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox netwJComboBox;
    private javax.swing.JLabel passlabel;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    private javax.swing.JLabel usernamelabel;
    // End of variables declaration//GEN-END:variables
}
