/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.GroceryStoreManager;

import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.Enterprise.Enterprise;
import Business.WorkQueue.WorkRequest;
import Business.Enterprise.Products;
import Business.ReceiverRequestOrder;
import Business.Organization.Organization;
import javax.swing.JPanel;
import Business.WorkQueue.GroceryStoreWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author visha
 */
public class ManageOrdersJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount account;
    private Enterprise enterprise;
    private EcoSystem systems;

    /*
     * Creates new form ManageOrderJPanel
     */

    ManageOrdersJPanel(JPanel userProcessContainer, Organization organization, EcoSystem business, Enterprise enterprise, UserAccount account) {
         initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.systems=business;
        this.enterprise=enterprise;
        this.account=account;
        populateOrder();
    }
    
     private void populateOrder() 
    {
        DefaultTableModel dtm = (DefaultTableModel) orders1.getModel();
        dtm.setRowCount(0);
        
         for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
         {
            for(WorkRequest request : organization.getWorkQueue().getWorkRequestList())
            {
              Object[] row = new Object[4];
              int orderID = request.getRequestID();
              row[0] = orderID;
              row[1] = request.getSender().getReceiver().getName();
              row[2] = request;
              row[3] = request.getStatus();
              dtm.addRow(row);
            }
        }
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        view = new javax.swing.JButton();
        ref = new javax.swing.JButton();
        take = new javax.swing.JButton();
        assign = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        orders1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        place1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(243, 223, 198));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("PT Serif Caption", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Managing Orders");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-190, 30, 1200, 37));

        Back.setBackground(new java.awt.Color(255, 102, 0));
        Back.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        Back.setText(" Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        view.setBackground(new java.awt.Color(255, 102, 0));
        view.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        view.setText("View Order");
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });
        add(view, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 210, -1, -1));

        ref.setBackground(new java.awt.Color(255, 102, 0));
        ref.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        ref.setText("Refresh");
        ref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refActionPerformed(evt);
            }
        });
        add(ref, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, -1, -1));

        take.setBackground(new java.awt.Color(255, 102, 0));
        take.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        take.setText("Take Order");
        take.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeActionPerformed(evt);
            }
        });
        add(take, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, -1, -1));

        assign.setBackground(new java.awt.Color(255, 102, 0));
        assign.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        assign.setText("Assign Deliveryman");
        assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignActionPerformed(evt);
            }
        });
        add(assign, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, -1, -1));

        jLabel2.setFont(new java.awt.Font("PT Serif Caption", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Order Details");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 452, -1));

        orders1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Receiver Name", "Message", "Status"
            }
        ));
        jScrollPane3.setViewportView(orders1);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 590, 80));

        place1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "ProductName"
            }
        ));
        jScrollPane4.setViewportView(place1);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 490, 90));

        jLabel3.setBackground(new java.awt.Color(243, 223, 198));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/beige.jpeg"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-550, 0, 1570, 750));
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackActionPerformed

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        // TODO add your handling code here:
       int selectedRow = orders1.getSelectedRow();
       if (selectedRow < 0)
       {
            JOptionPane.showMessageDialog(null, "Please select a row.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
       
       GroceryStoreWorkRequest request = (GroceryStoreWorkRequest) orders1.getValueAt(selectedRow, 2);
       DefaultTableModel dtm = (DefaultTableModel) place1.getModel();
       dtm.setRowCount(0);
        
        for(Products i: request.getRecList()) {
            Object row[] = new Object[1];
            row[0] = i;
            dtm.addRow(row);
        }
      
    }//GEN-LAST:event_viewActionPerformed

    private void takeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeActionPerformed
        // TODO add your handling code here:
        int selectedRow = orders1.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        GroceryStoreWorkRequest request = (GroceryStoreWorkRequest)orders1.getValueAt(selectedRow, 2);
         if(!(request.getStatus().equals("Order Placed")))
         {
            JOptionPane.showMessageDialog(null, "Order already Accepted.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
         return ;
         }
         
         request.setStatus("Accepted");
         JOptionPane.showMessageDialog(null, "Order accepted successfully.","Success",JOptionPane.INFORMATION_MESSAGE);
         populateOrder();
    }//GEN-LAST:event_takeActionPerformed

    private void assignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignActionPerformed
        // TODO add your handling code here:
        int selectedRow = orders1.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        GroceryStoreWorkRequest order1 = (GroceryStoreWorkRequest)orders1.getValueAt(selectedRow, 2);
         if(order1.getStatus().equalsIgnoreCase("Delivered"))
         {
            JOptionPane.showMessageDialog(null, "Order has been already Delivered.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
         return ;
         }
         if(order1.getStatus().equalsIgnoreCase("Out for Delivery"))
         {
            JOptionPane.showMessageDialog(null, "Deliveryman has been already assigned.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return ; 
         }
         if(!order1.getStatus().equalsIgnoreCase("Accepted"))
         {
            JOptionPane.showMessageDialog(null, "Order is not accepted. Kindly accept the order first to proceed.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return ; 
         }
        DeliveryManAssignJPanel panel = new DeliveryManAssignJPanel(userProcessContainer,systems, enterprise, order1);
        userProcessContainer.add("DeliveryManAssignJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_assignActionPerformed

    private void refActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refActionPerformed
        // TODO add your handling code here:
         populateOrder();
    }//GEN-LAST:event_refActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton assign;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable orders1;
    private javax.swing.JTable place1;
    private javax.swing.JButton ref;
    private javax.swing.JButton take;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables


   
}
