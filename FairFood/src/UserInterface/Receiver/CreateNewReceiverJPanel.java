/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Receiver;

import Business.EcoSystem;
import Business.Network.Network;
import Business.Organisation.Organisation;
import Business.Receiver.Receiver;
import Business.Role.ReceiverRole;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author visha
 */
public class CreateNewReceiverJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    EcoSystem system;
    Organisation organisation;
     private Receiver receiver;
     private boolean ValidEmail;
     private boolean ValidState;
     private boolean ValidCity;
   // private LatLong latLong;
     
    public CreateNewReceiverJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        this.organisation = organisation;
        resetTextFields();
       // populateNetwork();

    }
    /**
     * Creates new form CreateNewReceiverJPanel
     */
     private void resetTextFields(){
     // TextFields becomes false
        
        emailformat.setVisible(false);
        passformat.setVisible(false);
        passconformat.setVisible(false);
       // passwordSuccessLbl.setVisible(false);
        
    
    }
     
//     private void populateNetwork() {
//        stateComboBox.removeAllItems();
//
//        for (Network network : system.getNetworkList()) {
//            stateComboBox.addItem(network);
//        }
//
//    }
     
     
      private boolean usernamePatternType(String val1){
        Pattern p=Pattern.compile("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        Matcher m=p.matcher(val1);
        boolean b=m.matches();
        return b;
    }
    private boolean namePatternType(String val2){
        Pattern p=Pattern.compile("^[a-zA-Z]+$");
        Matcher m=p.matcher(val2);
        boolean b=m.matches();
        return b;
    }
     private boolean passwordPatternType(String val3){
        Pattern p1;
        p1 = Pattern.compile("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$");
        Matcher m1=p1.matcher(String.valueOf(val3));
        boolean b1=m1.matches();
        return b1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SubmitBtn = new javax.swing.JButton();
        ResetBtn = new javax.swing.JButton();
        NameField = new javax.swing.JTextField();
        AddressField = new javax.swing.JTextField();
        CityField = new javax.swing.JTextField();
        EmailField = new javax.swing.JTextField();
        PasswordField = new javax.swing.JTextField();
        ConfirmPassField = new javax.swing.JTextField();
        emailformat = new javax.swing.JLabel();
        passformat = new javax.swing.JLabel();
        passconformat = new javax.swing.JLabel();
        stateComboBox = new javax.swing.JComboBox<>();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Register For Fair Food");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, -1, -1));

        jLabel2.setText("Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        jLabel3.setText("Address:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));

        jLabel4.setText("City:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, -1, -1));

        jLabel5.setText("State:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));

        jLabel6.setText("Enmail:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, -1, -1));

        jLabel7.setText("Password:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, -1, -1));

        jLabel8.setText("Confirm Password:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, -1, -1));

        SubmitBtn.setText("Submit");
        SubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt);
            }
        });
        add(SubmitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, -1, -1));

        ResetBtn.setText("Reset");
        ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBtnActionPerformed(evt);
            }
        });
        add(ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, -1, -1));

        NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameFieldActionPerformed(evt);
            }
        });
        add(NameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 100, -1));
        add(AddressField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 120, -1));
        add(CityField, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 130, -1));
        add(EmailField, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 360, 90, -1));
        add(PasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 80, -1));

        ConfirmPassField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmPassFieldActionPerformed(evt);
            }
        });
        add(ConfirmPassField, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, 100, -1));

        emailformat.setText("name@gmail");
        add(emailformat, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, -1, -1));

        passformat.setText("pass@1");
        add(passformat, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, -1, -1));

        passconformat.setText("password do not match");
        add(passconformat, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 210, -1, -1));

        stateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(stateComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtnActionPerformed
        // TODO add your handling code here:
         Network network = (Network) stateComboBox.getSelectedItem();
         if(NameField.getText().isEmpty() ||  EmailField.getText().isEmpty() || AddressField.getText().isEmpty() || CityField.getText().isEmpty() ){
            JOptionPane.showMessageDialog(null,"Field(s) cannot be Empty!","Error",JOptionPane.ERROR_MESSAGE);
             return;
         
          
          }
     else if( ValidEmail){
            String name = NameField.getText();
            String password = PasswordField.getText();
            String email = EmailField.getText();
            String add = AddressField.getText();
            String city = CityField.getText();
           

            receiver = new Receiver();
            receiver.setName(name);
            receiver.setEmail(email);
            receiver.setAddress(add);
            receiver.setCity(city);
            receiver.setNetwork(network);
            
            // User Name Already Exists Validation 
            
                system.getReceiverDirectory().createReceiver(receiver);
                system.getUserAccountDirectory().createReceiverAccount(email, password,receiver, new ReceiverRole());
                JOptionPane.showMessageDialog(null, "Customer added successfully","Success",JOptionPane.INFORMATION_MESSAGE);
                clearTextFields();
                
        }else 
        {
           JOptionPane.showMessageDialog(null, "Please enter all the required fields correctly!","Error",JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
                                            
    }//GEN-LAST:event_SubmitBtnActionPerformed

    private void ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBtnActionPerformed
        // TODO add your handling code here:
        clearTextFields();
        resetTextFields();
    }//GEN-LAST:event_ResetBtnActionPerformed

    private void NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameFieldActionPerformed

    private void ConfirmPassFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmPassFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmPassFieldActionPerformed
     private void clearTextFields(){
                NameField.setText("");
                AddressField.setText("");
                PasswordField.setText("");
                ConfirmPassField.setText("");
                
               
                CityField.setText("");
                try{
                stateComboBox.setSelectedIndex(0);
                }catch (Exception e){
                    
                }
        }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddressField;
    private javax.swing.JTextField CityField;
    private javax.swing.JTextField ConfirmPassField;
    private javax.swing.JTextField EmailField;
    private javax.swing.JTextField NameField;
    private javax.swing.JTextField PasswordField;
    private javax.swing.JButton ResetBtn;
    private javax.swing.JButton SubmitBtn;
    private javax.swing.JLabel emailformat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel passconformat;
    private javax.swing.JLabel passformat;
    private javax.swing.JComboBox<String> stateComboBox;
    // End of variables declaration//GEN-END:variables
        }
