/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Receiver;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.GroceryStoreEnterprise;
import Business.Enterprise.Products;
import Business.Network.Network;
import Business.Organization.GroceryStoreOrganisation;
import Business.Organisation.Organisation;
import Business.Receiver.Receiver;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.GroceryManagerWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author truptiraut
 */
public class FoodOrderJPanel extends javax.swing.JPanel {
    
 
    
     private JPanel userProcessContainer;
    private UserAccount userAccount;
    private EcoSystem business;
    private Enterprise enterprise;
    private int cartCount=0;
    private String total;
    private int itemCount = 0;
    private ArrayList<Products> list;
    private Date currentDate;
    private Receiver receiver;
    private Network network;
    private Calendar date1;
   private Calendar date2;

    /*
     date1 = new GregorianCalendar();
         date2 = new GregorianCalendar();
              
              SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");*/


    public FoodOrderJPanel(JPanel userProcessContainer, Receiver receiver, EcoSystem system, UserAccount userAccount, Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.receiver = receiver;
        this.business=system;
        this.enterprise=enterprise;
        this.network = network;
        date1 = new GregorianCalendar();
         date2 = new GregorianCalendar();
              
              SimpleDateFormat sdf = new SimpleDateFormat("ddMMyyyy");
        this.list = new ArrayList<>();
      
//         storeTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
//          histTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
//           invoiceTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
//            histItemTbl.getTableHeader().setDefaultRenderer(new tableHeaderColors());
        populateStoreItems();
    }
    
      public String populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) CartTable.getModel();
        dtm.setRowCount(0);
        int totalBill=0;
        for(int i=itemCount;i<list.size();i++) {
            Object row[] = new Object[2];
            
            row[0] = list.get(i);
           
         
            dtm.addRow(row);
        }
        
        
    return String.valueOf(totalBill);
     }
         
     private void populateStoreItems(){
    DefaultTableModel dtm = (DefaultTableModel) inventoryTable.getModel();
        dtm.setRowCount(0);
        for(Network net : business.getNetworkList()){ 
            for(Enterprise e: net.getEnterpriseDirectory().getEnterpriseList()){
                 for(Products i: e.getProductsList()) {
                    Object row[] = new Object[3];
                    row[0] = i.getProductType();
                    row[1] = i;
                  
                    dtm.addRow(row);
                 }
            }
        }
        
      
       
     
   
}


       
        
       
          
    
    /**
     * Creates new form OrderDonationJPanel
     */
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        addtoCartButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CartTable = new javax.swing.JTable();
        DeletedBtn = new javax.swing.JButton();
        PlacedOrder = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Welcome");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 180, -1));

        inventoryTable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Expiry Date", "ItemType"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(inventoryTable);
        if (inventoryTable.getColumnModel().getColumnCount() > 0) {
            inventoryTable.getColumnModel().getColumn(2).setResizable(false);
            inventoryTable.getColumnModel().getColumn(3).setResizable(false);
            inventoryTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 540, 150));

        addtoCartButton6.setText("Add to cart");
        addtoCartButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoCartButton6ActionPerformed(evt);
            }
        });
        add(addtoCartButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 160, -1, -1));

        jLabel1.setText("Order Food here");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, -1, -1));

        jLabel3.setText("Cart Items");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, -1, -1));

        CartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Item"
            }
        ));
        jScrollPane2.setViewportView(CartTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 530, 150));

        DeletedBtn.setText("Delete");
        DeletedBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletedBtnActionPerformed(evt);
            }
        });
        add(DeletedBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 370, -1, -1));

        PlacedOrder.setText("Place Order");
        PlacedOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlacedOrderActionPerformed(evt);
            }
        });
        add(PlacedOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, -1, -1));

        back.setText("jButton3");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addtoCartButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoCartButton6ActionPerformed
        // TODO add your handling code here:

        int selectedRow = inventoryTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
            Products i = (Products)inventoryTable.getValueAt(selectedRow,1);
            cartCount++;
           list.add(i);
            this.total=populateTable();
            //totBillTxt.setText(this.total);
            JOptionPane.showMessageDialog(null, "Added to cart successfully","Success",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_addtoCartButton6ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backActionPerformed

    private void PlacedOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlacedOrderActionPerformed
        // TODO add your handling code here:
          if(CartTable.getRowCount() > 0 && cartCount > 0){
            GroceryManagerWorkRequest request = new GroceryManagerWorkRequest();
            request.setRecList(list);
            request.setSender(userAccount);
            request.setStatus("Order Placed");
           // request.setMessage(customerNotes.getText());
            Organisation org = null;
        for(Network net: business.getNetworkList()){
            for(Enterprise enter : net.getEnterpriseDirectory().getEnterpriseList()){
                if(enter instanceof GroceryStoreEnterprise){
                    for (Organisation organisation : enter.getOrganisationDirectory().getOrganisationList()){
                        if (organisation instanceof GroceryStoreOrganisation){
                            org = organisation;
                            break;
                        }
                    }
                }
            } 
        }
        
        
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            JOptionPane.showMessageDialog(null, "Order is placed successfully","Success",JOptionPane.INFORMATION_MESSAGE);
        }
            
        }else{
            JOptionPane.showMessageDialog(null, "Please add the menus to the cart to place the order.","INFORMATION",JOptionPane.INFORMATION_MESSAGE);
            return;
       }
    }//GEN-LAST:event_PlacedOrderActionPerformed

    private void DeletedBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletedBtnActionPerformed
        // TODO add your handling code here:
         int selectedRow = inventoryTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        else{
        Products i = (Products)inventoryTable.getValueAt(selectedRow,0 );        
      list.remove(i);
      this.total=populateTable();
          //  totBillTxt.setText(this.total);
        
        //JOptionPane.showMessageDialog(null, "Deleted from cart successfully","Success",JOptionPane.INFORMATION_MESSAGE)
        }
    }//GEN-LAST:event_DeletedBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CartTable;
    private javax.swing.JButton DeletedBtn;
    private javax.swing.JButton PlacedOrder;
    private javax.swing.JButton addtoCartButton6;
    private javax.swing.JButton back;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
